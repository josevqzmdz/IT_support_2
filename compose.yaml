# wordpress server using mysql running nginx as reverse proxy
services:
  #nginx section
  nginx:
    env_file: .env
    container_name: ${CONTAINER_NAME}-nginx
    build:
      context: .
      dockerfile: nginx.Dockerfile
    ports:
      - "8080:80"
    restart: on-failure:3
    volumes:
      # remember: local-path:docker-path: read only to avoid corrupted data
      - ./nginx:/etc/nginx/conf.d:rw
      - wordpress:/var/www/html
    # runs this script to check memory usage
    networks:
      - internal
    depends_on:
      wordpress:
        condition: service_healthy
  
  # database section
  database:
    container_name: ${CONTAINER_NAME}-database
    image: mysql:latest
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}

    ports:
      - "3306:3306"
    volumes:
    - dbdata:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      test: >
        bash -c '
        mysqladmin ping -h localhost -u root -p"$${MYSQL_ROOT_PASSWORD}" 2>/dev/null | grep -q "mysqld is alive"
        || exit 1'
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s
    command: 
      - --bind-address=0.0.0.0
      - --skip-name-resolve
      - --max_connections=200
      - --wait_timeout=300
    
  # phpmyadmin section
  phpmyadmin:
    container_name: ${CONTAINER_NAME}-phpmyadmin
    image: phpmyadmin/phpmyadmin
    env_file: .env
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      APACHE_SERVER_NAME: localhost
    # remember to first create a user
    # in localhost:8081
    ports:
      - "8081:80"
    networks:
      - internal


  # wordpress section
  wordpress:
    build:
      context: .
      dockerfile: wordpress.Dockerfile
    depends_on:
      database:
        condition: service_healthy
    env_file: .env
    container_name: ${CONTAINER_NAME}-wordpress
    volumes:
      - wordpress:/var/www/html
      
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_NAME: ${DATABASE_NAME}
      WORDPRESS_DB_USER: ${DATABASE_USER}
      WORDPRESS_DB_PASSWORD: ${DATABASE_PASSWORD}
    
    networks:
      internal:
        ipv4_address: ${WORDPRESS_IP}
    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "http://localhost/status || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  dbdata:
  wordpress:

networks:
  internal:
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.18.0.0/16 
