# wordpress server using mysql running nginx as reverse proxy
services:
  #nginx section
  nginx:
    env_file: .env
    container_name: ${CONTAINER_NAME}-nginx
    build:
      context: .
      dockerfile: nginx.Dockerfile
    ports:
      - "8080:80"
    volumes:
      # remember: local-path:docker-path: read and write
      - ./nginx:/etc/nginx/conf.d:rw
      - wordpress:/var/www/html
      - ./docs/other_files/nginx-entrypoint.sh:/nginx-entrypoint.sh:ro    
      - ./nginx-logs:/var/log/nginx  
      - ./nginx:/etc/nginx/conf.d
      - ./logs:/tmp/nginx-logs 
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
    # runs this script to check memory usage
    entrypoint: ["sh", "/nginx-entrypoint.sh"]
    networks:
      - internal
    depends_on:
      - wordpress
    extra_hosts:
      - "wordpress:172.18.0.2"
    restart: unless-stopped
    
    
  
  # database section
  database:
    container_name: ${CONTAINER_NAME}-database
    image: mysql:latest
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
    # sends a ping and checks if the database is OK
    #healthcheck:
    #  test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$DATABASE_ROOT_PASSWORD" ]
    #  timeout: 20s
    #  retries: 10
    # default mysql port
    ports:
      - "3306:3306"
    volumes:
    - dbdata:/var/lib/mysql
    networks:
      - internal
    
  # phpmyadmin section
  phpmyadmin:
    container_name: ${CONTAINER_NAME}-phpmyadmin
    image: phpmyadmin/phpmyadmin
    env_file: .env
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      APACHE_SERVER_NAME: localhost
    # remember to first create a user
    # in localhost:8081
    ports:
      - "8081:80"
    networks:
      - internal


  # wordpress section
  wordpress:
    build:
      context: .
      dockerfile: wordpress.Dockerfile
    depends_on:
      - database
    env_file: .env
    container_name: ${CONTAINER_NAME}-wordpress
    volumes:
      - wordpress:/var/www/html
      - ./docs/other_files/wp1-entrypoint.sh:/wp1-entrypoint.sh:ro
      - ./docs/other_files/chemiloco:/var/spool/cron/crontabs/chemiloco:ro
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_NAME: ${DATABASE_NAME}
      WORDPRESS_DB_USER: ${DATABASE_USER}
      WORDPRESS_DB_PASSWORD: ${DATABASE_PASSWORD}
    entrypoint: ["sh", "/wp1-entrypoint.sh"]
    
    networks:
      - internal

volumes:
  dbdata:
  wordpress:

networks:
  internal:
    driver: bridge
    attachable: true
